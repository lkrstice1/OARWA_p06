{"version":3,"sources":["components/Poruka.js","services/poruke.js","App.js","index.js"],"names":["Poruka","poruka","promjenaVaznosti","brisiPoruku","oznaka","vazno","className","sadrzaj","onClick","role","aria-label","osnovniUrl","axios","get","id","noviObjekt","put","delete","App","props","useState","poruke","postaviPoruke","ispisSve","postaviIspis","porukeZaIspis","filter","useEffect","porukeAkcija","then","res","data","map","p","key","find","modPoruka","response","console","log","promjenaVaznostiPoruke","ReactDOM","render","datum","document","getElementById"],"mappings":"0NAgBeA,G,MAbA,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,YACnCC,EAASH,EAAOI,MACpB,qBAAuB,mBAEzB,OACE,4BACE,0BAAMC,UAAWL,EAAOI,MAAQ,QAAU,WAAYJ,EAAOM,SAC7D,4BAAQC,QAASN,GAAmBE,GACpC,4BAAQI,QAASL,GAAa,0BAAMM,KAAK,MAAMC,aAAW,UAA5B,c,QCV9BC,EAAa,mCAkBJ,EAhBI,WACf,OAAOC,IAAMC,IAAIF,IAeN,EARC,SAACG,EAAIC,GACjB,OAAOH,IAAMI,IAAN,UAAaL,EAAb,YAA2BG,GAAMC,IAO7B,EAJD,SAAAD,GACV,OAAOF,IAAMK,OAAN,UAAgBN,EAAhB,YAA8BG,KC4E1BI,EAvFH,SAACC,GAAW,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACLC,EADK,OAEcF,mBAAS,mBAFvB,gCAGaA,oBAAS,IAHtB,mBAGbG,EAHa,KAGHC,EAHG,KAMfC,EAAgBF,EACpBF,EACAA,EAAOK,QAAO,SAAAzB,GAAM,OAAqB,IAAjBA,EAAOI,SAGjCsB,qBAAW,WACTC,IACCC,MAAK,SAAAC,GAAG,OAAIR,EAAcQ,EAAIC,WAC9B,IA4CH,OACE,6BACE,sCACA,6BACE,4BAAQvB,QAAS,kBAAMgB,GAAcD,KAArC,gBACYA,EAAW,aAAU,QAGnC,4BACGE,EAAcO,KAAI,SAAAC,GAAC,OAClB,kBAAC,EAAD,CACAC,IAAKD,EAAEnB,GACPb,OAAQgC,EACR/B,iBAAkB,kBAlCK,SAACY,GAC9B,IAAMb,EAASoB,EAAOc,MAAK,SAAAF,GAAC,OAAIA,EAAEnB,KAAOA,KACnCsB,EAAS,2BACVnC,GADU,IAEbI,OAAQJ,EAAOI,QAEjBuB,EAAqBd,EAAIsB,GACtBP,MAAK,SAAAQ,GACJC,QAAQC,IAAIF,GACZf,EAAcD,EAAOW,KAAI,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,EAAKmB,EAAII,EAASN,YAyB/BS,CAAuBP,EAAEnB,KACjDX,YAAa,kBAtBAW,EAsBkBmB,EAAEnB,QArBvCc,EAAmBd,GAClBe,MAAK,SAAAQ,GACJC,QAAQC,IAAIF,GACZf,EAAcD,EAAOK,QAAO,SAAAO,GAAC,OAAIA,EAAEnB,KAAOA,SAJ1B,IAACA,WC/BvB2B,IAASC,OAAO,kBAAC,EAAD,CAAKrB,OApBN,CACb,CACEP,GAAI,EACJP,QAAS,sBACToC,MAAO,2BACPtC,OAAO,GAET,CACES,GAAI,EACJP,QAAS,6BACToC,MAAO,2BACPtC,OAAO,GAET,CACES,GAAI,EACJP,QAAS,iDACToC,MAAO,2BACPtC,OAAO,MAG6BuC,SAASC,eAAe,W","file":"static/js/main.63eca48f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Poruka.css'\r\n\r\nconst Poruka = ({poruka, promjenaVaznosti, brisiPoruku}) => {\r\n  const oznaka = poruka.vazno \r\n  ? 'Oznaci kao nevazno' : 'oznaci kao vazno'\r\n\r\n  return (\r\n    <li>\r\n      <span className={poruka.vazno ? 'vazno' : 'nevazno'}>{poruka.sadrzaj}</span>\r\n      <button onClick={promjenaVaznosti}>{oznaka}</button>\r\n      <button onClick={brisiPoruku}><span role='img' aria-label=\"delete\">❌</span></button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Poruka","import axios from 'axios'\r\nconst osnovniUrl = 'http://localhost:3001/api/poruke'\r\n\r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n\r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n\r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\n\r\nconst brisi = id => {\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n    dohvatiSve, stvori, osvjezi, brisi\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Poruka from './components/Poruka'\r\nimport axios from 'axios' //dodana komponenta\r\nimport porukeAkcija from './services/poruke'\r\n\r\nconst App = (props) => {\r\n  const [ poruke, postaviPoruke] = useState([])\r\n  const [ unosPoruke, postaviUnos] = useState('unesi poruku...')\r\n  const [ ispisSve, postaviIspis] = useState(true)\r\n  \r\n\r\n  const porukeZaIspis = ispisSve\r\n  ? poruke\r\n  : poruke.filter(poruka => poruka.vazno === true)\r\n\r\n  \r\n  useEffect( () => {\r\n    porukeAkcija.dohvatiSve()\r\n    .then(res => postaviPoruke(res.data))\r\n  }, [])\r\n\r\n  //funkcija se poziva na klik te generira i sprema novu poruku\r\n  const novaPoruka = (e) => {\r\n    e.preventDefault()\r\n    console.log('Klik', e.target)\r\n    const noviObjekt = {\r\n      sadrzaj: unosPoruke,\r\n      datum: new Date(),\r\n      vazno: Math.random() > 0.5      \r\n    }\r\n    porukeAkcija.stvori(noviObjekt)\r\n      .then(res => {\r\n        postaviPoruke(poruke.concat(res.data))\r\n        postaviUnos('')\r\n      })\r\n  }\r\n\r\n  const promjenaUnosa = (e) => {\r\n    console.log(e.target.value);\r\n    postaviUnos(e.target.value)\r\n  }\r\n\r\n  const promjenaVaznostiPoruke = (id) => {\r\n    const poruka = poruke.find(p => p.id === id)\r\n    const modPoruka = {\r\n      ...poruka,\r\n      vazno: !poruka.vazno\r\n    }\r\n    porukeAkcija.osvjezi(id, modPoruka)\r\n      .then(response => {\r\n        console.log(response)\r\n        postaviPoruke(poruke.map(p => p.id !== id ? p : response.data))\r\n      })\r\n  }\r\n\r\n  const brisiPoruku = (id) => {\r\n    porukeAkcija.brisi(id)\r\n    .then(response => {\r\n      console.log(response);\r\n      postaviPoruke(poruke.filter(p => p.id !== id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Poruke</h1>\r\n      <div>\r\n        <button onClick={() => postaviIspis(!ispisSve)}>\r\n          Prikaži { ispisSve ? \"važne\" : \"sve\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {porukeZaIspis.map(p =>\r\n          <Poruka \r\n          key={p.id} \r\n          poruka={p} \r\n          promjenaVaznosti={() => promjenaVaznostiPoruke(p.id)}\r\n          brisiPoruku={() => brisiPoruku(p.id)}\r\n          />\r\n        )}        \r\n      </ul>\r\n      {/*\r\n        <form onSubmit={novaPoruka}>\r\n        <input value={unosPoruke} onChange={promjenaUnosa} />\r\n        <button type='submit'>Spremi</button>\r\n        </form>\r\n        */}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nconst poruke = [\r\n  {\r\n    id: 1,\r\n    sadrzaj: 'HTML je jednostavan',\r\n    datum: '2019-05-30T17:30:31.098Z',\r\n    vazno: true\r\n  },\r\n  {\r\n    id: 2,\r\n    sadrzaj: 'React koristi JSX sintaksu',\r\n    datum: '2019-05-30T18:39:34.091Z',\r\n    vazno: false\r\n  },\r\n  {\r\n    id: 3,\r\n    sadrzaj: 'GET i POST su najvaznije metode HTTP protokola',\r\n    datum: '2019-05-30T19:20:14.298Z',\r\n    vazno: true\r\n  }\r\n]\r\nReactDOM.render(<App poruke={poruke} />,document.getElementById('root'))\r\n"],"sourceRoot":""}